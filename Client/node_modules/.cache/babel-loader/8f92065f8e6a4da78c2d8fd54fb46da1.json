{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varad\\\\Desktop\\\\Atecna\\\\test\\\\test-gabriel-varadi\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport ChessCount from \"./components/ChessCount/ChessCount\";\nimport Charts from \"./containers/Charts/Charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chessViewers: 0,\n      chessColor: \"white\",\n      series: []\n    };\n    this.webSocket = new WebSocket(\"ws://localhost:3001\");\n  }\n\n  componentDidMount() {\n    this.webSocket.addEventListener('open', function (event) {\n      console.log('Client connected');\n    });\n    this.webSocket.addEventListener('error', function (error) {\n      console.log('Error : ', error);\n    });\n    console.log(\"componentDidMount <App />\");\n\n    this.webSocket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      const [chessViewers] = data.series.filter(serie => serie.name === \"Chess\");\n      const series = data.series.filter(serie => serie.dataType === \"live-chart\");\n      let chessColor; // if (prevState.chessViewers < chessViewers.data) {\n      //     chessColor = \"#26a69a\"\n      // } else if (prevState.chessViewers > chessViewers.data) {\n      //     chessColor = \"#f44336\"\n      // } else {\n      //   chessColor = \"white\"\n      // }\n\n      this.setState(state => {\n        console.log(state); // chessViewers: chessViewers.data,\n        // chessColor: chessColor,\n        // series: series,\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ChessCount, {\n        chessViewers: this.state.chessViewers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Charts, {\n        series: this.state.series\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/varad/Desktop/Atecna/test/test-gabriel-varadi/src/App.js"],"names":["React","Component","ChessCount","Charts","App","constructor","props","state","chessViewers","chessColor","series","webSocket","WebSocket","componentDidMount","addEventListener","event","console","log","error","onmessage","data","JSON","parse","filter","serie","name","dataType","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,MAAOC,GAAP,SAAmBH,SAAnB,CAA6B;AAE3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,UAAU,EAAE,OAFD;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKA,SAAKC,SAAL,GAAiB,IAAIC,SAAJ,CAAc,qBAAd,CAAjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,SAAL,CAAeG,gBAAf,CAAgC,MAAhC,EAAwC,UAASC,KAAT,EAAgB;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFD;AAGA,SAAKN,SAAL,CAAeG,gBAAf,CAAgC,OAAhC,EAAyC,UAASI,KAAT,EAAgB;AACvDF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,KAAxB;AACD,KAFD;AAGAF,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,SAAKN,SAAL,CAAeQ,SAAf,GAA4BJ,KAAD,IAAW;AACpC,YAAMK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACK,IAAjB,CAAb;AACA,YAAM,CAACZ,YAAD,IAAiBY,IAAI,CAACV,MAAL,CAAYa,MAAZ,CAAmBC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,OAA3C,CAAvB;AACA,YAAMf,MAAM,GAAGU,IAAI,CAACV,MAAL,CAAYa,MAAZ,CAAmBC,KAAK,IAAIA,KAAK,CAACE,QAAN,KAAmB,YAA/C,CAAf;AACA,UAAIjB,UAAJ,CAJoC,CAKpC;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAAKkB,QAAL,CAAepB,KAAD,IAAW;AACvBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EADuB,CAEvB;AACA;AACA;AACD,OALD;AAMH,KAlBD;AAmBD;;AAEDqB,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWG;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAjD0B;;AAoD7B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport ChessCount from \"./components/ChessCount/ChessCount\"\r\nimport Charts from \"./containers/Charts/Charts\"\r\n\r\nclass  App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chessViewers: 0,\r\n      chessColor: \"white\",\r\n      series: []\r\n    }\r\n    this.webSocket = new WebSocket(\"ws://localhost:3001\")\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.webSocket.addEventListener('open', function(event) {\r\n      console.log('Client connected');\r\n    });\r\n    this.webSocket.addEventListener('error', function(error) {\r\n      console.log('Error : ', error);\r\n    });\r\n    console.log(\"componentDidMount <App />\");\r\n    this.webSocket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data)\r\n      const [chessViewers] = data.series.filter(serie => serie.name === \"Chess\")\r\n      const series = data.series.filter(serie => serie.dataType === \"live-chart\")\r\n      let chessColor\r\n      // if (prevState.chessViewers < chessViewers.data) {\r\n      //     chessColor = \"#26a69a\"\r\n      // } else if (prevState.chessViewers > chessViewers.data) {\r\n      //     chessColor = \"#f44336\"\r\n      // } else {\r\n      //   chessColor = \"white\"\r\n      // }\r\n        this.setState((state) => {\r\n          console.log(state)\r\n          // chessViewers: chessViewers.data,\r\n          // chessColor: chessColor,\r\n          // series: series,\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <ChessCount chessViewers={this.state.chessViewers} />\r\n        <Charts series={this.state.series} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}