{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.deepmerge = factory();\n  }\n})(this, function () {\n  return function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n      target = target || [];\n      dst = dst.concat(target);\n      src.forEach(function (e, i) {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        } else if (typeof e === 'object') {\n          dst[i] = deepmerge(target[i], e);\n        } else {\n          if (target.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n    } else {\n      if (target && typeof target === 'object') {\n        Object.keys(target).forEach(function (key) {\n          dst[key] = target[key];\n        });\n      }\n\n      Object.keys(src).forEach(function (key) {\n        if (typeof src[key] !== 'object' || !src[key]) {\n          dst[key] = src[key];\n        } else {\n          if (!target[key]) {\n            dst[key] = src[key];\n          } else {\n            dst[key] = deepmerge(target[key], src[key]);\n          }\n        }\n      });\n    }\n\n    return dst;\n  };\n});","map":{"version":3,"sources":["C:/Users/varad/Desktop/Atecna/test/test-gabriel-varadi/node_modules/react-rt-chart/node_modules/deepmerge/index.js"],"names":["root","factory","define","amd","exports","module","deepmerge","target","src","array","Array","isArray","dst","concat","forEach","e","i","indexOf","push","Object","keys","key"],"mappings":"AAAC,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACtB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,IAAAA,MAAM,CAACD,OAAD,CAAN;AACH,GAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AACpCC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,EAAxB;AACH,GAFM,MAEA;AACHD,IAAAA,IAAI,CAACM,SAAL,GAAiBL,OAAO,EAAxB;AACH;AACJ,CARA,EAQC,IARD,EAQO,YAAY;AAEpB,SAAO,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAAgC;AACnC,QAAIC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAZ;AACA,QAAII,GAAG,GAAGH,KAAK,IAAI,EAAT,IAAe,EAAzB;;AAEA,QAAIA,KAAJ,EAAW;AACPF,MAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAK,MAAAA,GAAG,GAAGA,GAAG,CAACC,MAAJ,CAAWN,MAAX,CAAN;AACAC,MAAAA,GAAG,CAACM,OAAJ,CAAY,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACvB,YAAI,OAAOJ,GAAG,CAACI,CAAD,CAAV,KAAkB,WAAtB,EAAmC;AAC/BJ,UAAAA,GAAG,CAACI,CAAD,CAAH,GAASD,CAAT;AACH,SAFD,MAEO,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AAC9BH,UAAAA,GAAG,CAACI,CAAD,CAAH,GAASV,SAAS,CAACC,MAAM,CAACS,CAAD,CAAP,EAAYD,CAAZ,CAAlB;AACH,SAFM,MAEA;AACH,cAAIR,MAAM,CAACU,OAAP,CAAeF,CAAf,MAAsB,CAAC,CAA3B,EAA8B;AAC1BH,YAAAA,GAAG,CAACM,IAAJ,CAASH,CAAT;AACH;AACJ;AACJ,OAVD;AAWH,KAdD,MAcO;AACH,UAAIR,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAAhC,EAA0C;AACtCY,QAAAA,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBO,OAApB,CAA4B,UAAUO,GAAV,EAAe;AACvCT,UAAAA,GAAG,CAACS,GAAD,CAAH,GAAWd,MAAM,CAACc,GAAD,CAAjB;AACH,SAFD;AAGH;;AACDF,MAAAA,MAAM,CAACC,IAAP,CAAYZ,GAAZ,EAAiBM,OAAjB,CAAyB,UAAUO,GAAV,EAAe;AACpC,YAAI,OAAOb,GAAG,CAACa,GAAD,CAAV,KAAoB,QAApB,IAAgC,CAACb,GAAG,CAACa,GAAD,CAAxC,EAA+C;AAC3CT,UAAAA,GAAG,CAACS,GAAD,CAAH,GAAWb,GAAG,CAACa,GAAD,CAAd;AACH,SAFD,MAGK;AACD,cAAI,CAACd,MAAM,CAACc,GAAD,CAAX,EAAkB;AACdT,YAAAA,GAAG,CAACS,GAAD,CAAH,GAAWb,GAAG,CAACa,GAAD,CAAd;AACH,WAFD,MAEO;AACHT,YAAAA,GAAG,CAACS,GAAD,CAAH,GAAWf,SAAS,CAACC,MAAM,CAACc,GAAD,CAAP,EAAcb,GAAG,CAACa,GAAD,CAAjB,CAApB;AACH;AACJ;AACJ,OAXD;AAYH;;AAED,WAAOT,GAAP;AACH,GAvCD;AAyCC,CAnDA,CAAD","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n"]},"metadata":{},"sourceType":"script"}