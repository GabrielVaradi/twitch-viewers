{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varad\\\\Desktop\\\\Atecna\\\\test\\\\test-gabriel-varadi\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport ChessChart from \"./containers/Charts/ChessChart\";\nimport DotaChart from \"./containers/Charts/DotaChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chessViewers: 0,\n      series: []\n    };\n    this.webSocket = new WebSocket(\"ws://localhost:3001\");\n  }\n\n  componentDidMount() {\n    this.webSocket.addEventListener('open', function (event) {\n      console.log('Client connected');\n    });\n    this.webSocket.addEventListener('error', function (error) {\n      console.log('Error : ', error);\n    });\n    console.log(\"componentDidMount <App />\");\n\n    this.webSocket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      const [chessViewers] = this.props.data.series.filter(serie => serie.name === \"Chess\");\n      const series = this.props.data.series.filter(serie => serie.type === \"chart\");\n      this.setState({\n        chessViewers: chessViewers.data,\n        series: series\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ChessChart, {\n        data: this.state.chessViewers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/varad/Desktop/Atecna/test/test-gabriel-varadi/src/App.js"],"names":["React","Component","ChessChart","DotaChart","App","constructor","props","state","chessViewers","series","webSocket","WebSocket","componentDidMount","addEventListener","event","console","log","error","onmessage","data","JSON","parse","filter","serie","name","type","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;AAEA,MAAOC,GAAP,SAAmBH,SAAnB,CAA6B;AAE3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,SAAL,GAAiB,IAAIC,SAAJ,CAAc,qBAAd,CAAjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,SAAL,CAAeG,gBAAf,CAAgC,MAAhC,EAAwC,UAASC,KAAT,EAAgB;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFD;AAGA,SAAKN,SAAL,CAAeG,gBAAf,CAAgC,OAAhC,EAAyC,UAASI,KAAT,EAAgB;AACvDF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,KAAxB;AACD,KAFD;AAGAF,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,SAAKN,SAAL,CAAeQ,SAAf,GAA4BJ,KAAD,IAAW;AACpC,YAAMK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACK,IAAjB,CAAb;AACA,YAAM,CAACX,YAAD,IAAiB,KAAKF,KAAL,CAAWa,IAAX,CAAgBV,MAAhB,CAAuBa,MAAvB,CAA8BC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,OAAtD,CAAvB;AACA,YAAMf,MAAM,GAAG,KAAKH,KAAL,CAAWa,IAAX,CAAgBV,MAAhB,CAAuBa,MAAvB,CAA8BC,KAAK,IAAIA,KAAK,CAACE,IAAN,KAAe,OAAtD,CAAf;AACE,WAAKC,QAAL,CAAc;AACZlB,QAAAA,YAAY,EAAEA,YAAY,CAACW,IADf;AAEZV,QAAAA,MAAM,EAAEA;AAFI,OAAd;AAIH,KARD;AASD;;AAEDkB,EAAAA,MAAM,GAAG;AAEPZ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAvC0B;;AA0C7B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport ChessChart from \"./containers/Charts/ChessChart\"\nimport DotaChart from \"./containers/Charts/DotaChart\"\n\nclass  App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chessViewers: 0,\n      series: []\n    }\n    this.webSocket = new WebSocket(\"ws://localhost:3001\")\n  }\n\n  componentDidMount() {\n    this.webSocket.addEventListener('open', function(event) {\n      console.log('Client connected');\n    });\n    this.webSocket.addEventListener('error', function(error) {\n      console.log('Error : ', error);\n    });\n    console.log(\"componentDidMount <App />\");\n    this.webSocket.onmessage = (event) => {\n      const data = JSON.parse(event.data)\n      const [chessViewers] = this.props.data.series.filter(serie => serie.name === \"Chess\")\n      const series = this.props.data.series.filter(serie => serie.type === \"chart\")\n        this.setState({\n          chessViewers: chessViewers.data,\n          series: series\n        })\n    }\n  }\n\n  render() {\n\n    console.log(this.state)\n    return (\n      <div className=\"App\">\n        <ChessChart data={this.state.chessViewers} />\n        {/* <DotaChart data={this.state.series} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}