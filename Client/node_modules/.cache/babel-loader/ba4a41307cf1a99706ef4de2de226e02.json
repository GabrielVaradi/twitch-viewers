{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varad\\\\Desktop\\\\Atecna\\\\test\\\\test-gabriel-varadi\\\\src\\\\containers\\\\Charts\\\\ChessChart.js\";\nimport React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport axios from \"axios\";\nimport api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChessChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalViewers: 0,\n      series: [{\n        name: 'Chess Viewers',\n        data: []\n      }],\n      options: {\n        chart: {\n          id: 'realtime',\n          height: 350,\n          type: 'line',\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000\n            }\n          },\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 'Dynamic Updating Chart',\n          align: 'left'\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {// type: 'datetime',\n          // categories: [1991,1992,1993,1994,1995,1996,1997, 1998,1999],\n          // range: 10,\n        },\n        yaxis: {// max: 100\n        },\n        legend: {\n          show: false\n        }\n      }\n    };\n\n    this.updateData = allViewers => {\n      const oldSeriesData = [...this.state.series[0].data];\n      const newSeriesData = oldSeriesData;\n      newSeriesData.push(allViewers);\n      this.setState({\n        totalViewers: allViewers,\n        series: [{\n          data: newSeriesData,\n          name: \"Chess Viewers\"\n        }]\n      });\n    };\n\n    this.sumViewers = data => {\n      let totalViewers = 0;\n\n      for (let stream of data.data) {\n        totalViewers += stream.viewer_count;\n      }\n\n      return totalViewers;\n    };\n\n    this.fetchData = async () => {\n      const getToken = await axios.post(\"https://id.twitch.tv/oauth2/token?client_id=kyeb25g56k9enf1h06t5pbhfzr08ed&client_secret=i69ag27ehweltcib9303nsai03cytr&grant_type=client_credentials&scope=analytics:read:games\").then(response => response).catch(e => console.log(e));\n      const chessData = await fetch(\"https://api.twitch.tv/helix/streams/?first=100&game_id=743\", {\n        \"headers\": {\n          \"Client-ID\": \"kyeb25g56k9enf1h06t5pbhfzr08ed\",\n          \"Authorization\": \"Bearer \" + getToken.data.access_token\n        }\n      }).then(response => response.json()).catch(e => console.log(e));\n      const allViewers = this.sumViewers(chessData);\n      this.updateData(allViewers);\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.fetchData(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: [/*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"line\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Total Viewers : \", this.state.totalViewers, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ChesssChart; // curl -X GET 'https://api.twitch.tv/helix/games/top' \\\n// -H 'Authorization: Bearer dx39ctb7padgqe6s8be4q1ir82hy7n' \\\n// -H 'Client-Id: kyeb25g56k9enf1h06t5pbhfzr08ed'","map":{"version":3,"sources":["C:/Users/varad/Desktop/Atecna/test/test-gabriel-varadi/src/containers/Charts/ChessChart.js"],"names":["React","Component","ReactApexChart","axios","api","ChessChart","state","totalViewers","series","name","data","options","chart","id","height","type","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","dataLabels","stroke","curve","title","text","align","markers","size","xaxis","yaxis","legend","updateData","allViewers","oldSeriesData","newSeriesData","push","setState","sumViewers","stream","viewer_count","fetchData","getToken","post","then","response","catch","e","console","log","chessData","fetch","access_token","json","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","ChesssChart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport axios from \"axios\"\r\nimport api from '../../api'\r\n\r\n\r\nclass ChessChart extends Component {\r\n    \r\n      state = {\r\n        totalViewers: 0,\r\n        series: [\r\n          {\r\n            name: 'Chess Viewers',\r\n            data: []\r\n          },\r\n        ],\r\n        options: {\r\n          chart: {\r\n            id: 'realtime',\r\n            height: 350,\r\n            type: 'line',\r\n            animations: {\r\n              enabled: true,\r\n              easing: 'linear',\r\n              dynamicAnimation: {\r\n                speed: 1000\r\n              }\r\n            },\r\n            toolbar: {\r\n              show: false\r\n            },\r\n            zoom: {\r\n              enabled: false\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          stroke: {\r\n            curve: 'smooth'\r\n          },\r\n          title: {\r\n            text: 'Dynamic Updating Chart',\r\n            align: 'left'\r\n          },\r\n          markers: {\r\n            size: 0\r\n          },\r\n          xaxis: {\r\n            // type: 'datetime',\r\n            // categories: [1991,1992,1993,1994,1995,1996,1997, 1998,1999],\r\n            // range: 10,\r\n          },\r\n          yaxis: {\r\n            // max: 100\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n        }, \r\n      };\r\n  \r\n\r\n\r\n    updateData = (allViewers) => {\r\n      const oldSeriesData = [...this.state.series[0].data]\r\n      const newSeriesData = oldSeriesData\r\n      newSeriesData.push(allViewers)\r\n      \r\n      this.setState({\r\n        totalViewers: allViewers,\r\n        series: [{\r\n          data: newSeriesData,\r\n          name: \"Chess Viewers\"\r\n        }]\r\n      });\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.fetchData(), 1000)\r\n    }\r\n\r\n    sumViewers = (data) => {\r\n      \r\n      let totalViewers = 0\r\n      for (let stream of data.data) {\r\n        totalViewers += stream.viewer_count\r\n      }\r\n      return totalViewers\r\n    }\r\n\r\n    fetchData = async () => {\r\n      const getToken = await axios.post(\"https://id.twitch.tv/oauth2/token?client_id=kyeb25g56k9enf1h06t5pbhfzr08ed&client_secret=i69ag27ehweltcib9303nsai03cytr&grant_type=client_credentials&scope=analytics:read:games\")\r\n        .then(response => response)\r\n        .catch(e => console.log(e))\r\n\r\n      const chessData = await fetch(\r\n        \"https://api.twitch.tv/helix/streams/?first=100&game_id=743\",\r\n        {\r\n          \"headers\": {\r\n            \"Client-ID\": \"kyeb25g56k9enf1h06t5pbhfzr08ed\",\r\n            \"Authorization\": \"Bearer \" + getToken.data.access_token\r\n        }\r\n        }\r\n      )\r\n      .then(response => response.json())\r\n      .catch(e => console.log(e));\r\n\r\n      const allViewers = this.sumViewers(chessData)\r\n      this.updateData(allViewers)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n  \r\n    render() {\r\n      console.log(this.state)\r\n        return (\r\n            <div id=\"chart\">  \r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\r\n                <div> Total Viewers : {this.state.totalViewers} </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default ChesssChart\r\n\r\n// curl -X GET 'https://api.twitch.tv/helix/games/top' \\\r\n// -H 'Authorization: Bearer dx39ctb7padgqe6s8be4q1ir82hy7n' \\\r\n// -H 'Client-Id: kyeb25g56k9enf1h06t5pbhfzr08ed'\r\n"]},"metadata":{},"sourceType":"module"}